defaults: &defaults
  docker:
    - image: circleci/elixir:1.9.1-node-browsers

    - image: postgres:11-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ""

  environment:
    MIX_ENV: test
    MIX_HOME: /home/circleci/app/global

  working_directory: ~/app

version: 2
jobs:
  checkout_code:
    <<: *defaults

    steps:
      - checkout

      - persist_to_workspace:
          root: .
          paths:
          - .

  install_dependencies:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Install Hex Locally
          command: mix local.hex --force

      - run:
          name: Install Rebar
          command: mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}--{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
            - v1-build-cache-{{ .Branch }}--{{ checksum "mix.lock" }}
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache

      - run:
          name: Install and Compile Project Dependencies
          command: mix do deps.get, deps.compile

      - save_cache:
          key: v1-mix-cache-{{ .Branch }}--{{ checksum "mix.lock" }}
          paths:
            - "deps"

      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths:
            - "deps"

      - save_cache:
          key: v2-mix-cache
          paths:
            - "deps"
            - "/home/circleci/app/global"

      - save_cache:
          key: v1-build-cache-{{ .Branch }}--{{ checksum "mix.lock" }}
          paths: "_build"

      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"

      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - restore_cache:
          keys:
            - v1-node-dependencies-{{ .Branch }}-{{ checksum "assets/yarn.lock" }}
            - v1-node-dependencies-{{ .Branch }}-
            - v1-node-dependencies-

      - run:
          name: Install Node Dependencies
          command: cd assets && yarn install

      - save_cache:
          key: v1-node-dependencies-{{ .Branch }}-{{ checksum "assets/yarn.lock" }}
          paths:
            - "assets/node_modules"
            - "~/.cache/yarn"

      - persist_to_workspace:
          root: .
          paths:
            - .

  lint_project:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Lint Project
          command: mix lint

      - run:
          name: Generate file for checksum
          command: cat mix.exs mix.lock .dialyzer_ignore.exs > dialyzer-checksummable

      - restore_cache:
          keys:
            - v2-plt--{{ checksum "dialyzer-checksummable" }}

      - run:
          name: Type Check
          command: MIX_ENV=dev mix dialyzer --halt-exit-status

      - save_cache:
          key: v2-plt--{{checksum "dialyzer-checksummable" }}
          paths:
            - priv/plts

  run_tests:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Run General Tests
          command: mix test

      - store_test_results:
          path: "_build/test/lib/figgis"

  run_browser_tests:
    <<: *defaults

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Set up DB
          command: mix ecto.setup

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Build static assets
          command: cd assets && yarn build

      - run:
          name: Run Jest Tests
          command: cd assets && yarn test:ci

      - store_test_results:
          path: "assets/__tests__/junit.xml"

      - store_artifacts:
          path: "assets/__tests__/artifacts"

workflows:
  version: 2

  test_and_deploy:
    jobs:
      - checkout_code

      - install_dependencies:
          requires:
            - checkout_code

      - lint_project:
          requires:
            - install_dependencies

      - run_tests:
          requires:
            - install_dependencies

      - run_browser_tests:
          requires:
            - install_dependencies
